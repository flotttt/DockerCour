services:
  frontend:
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=1
      - NG_CLI_ANALYTICS=false
      - GENERATE_SOURCEMAP=true
    volumes:
      - ./biblioflow-frontend/src:/app/src
      - ./biblioflow-frontend/angular.json:/app/angular.json
      - ./biblioflow-frontend/package.json:/app/package.json
      - ./biblioflow-frontend/tsconfig.json:/app/tsconfig.json
      - frontend_dev_node_modules:/app/node_modules
    ports:
      - "4200:4200"
      - "9229:9229"
    command: ["npm", "run", "start:debug"]
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health" ]
      interval: 60s
      start_period: 120s

  # ===== BACKEND - OPTIMISATIONS DEV =====
  backend:
    environment:
      - NODE_ENV=development
      - DEBUG=biblioflow:*
      - LOG_LEVEL=debug
      - GENERATE_SOURCEMAP=true
      # Variables spécifiques au debugging
      - NODE_OPTIONS=--inspect=0.0.0.0:9230
    volumes:
      # Bind mounts pour hot-reload
      - ./biblioflow-backend/src:/usr/src/app/src
      - ./biblioflow-backend/package.json:/usr/src/app/package.json
      - ./biblioflow-backend/tsconfig.json:/usr/src/app/tsconfig.json
      - ./biblioflow-backend/nest-cli.json:/usr/src/app/nest-cli.json
      # Volume séparé pour node_modules
      - backend_dev_node_modules:/usr/src/app/node_modules
    ports:
      - "3000:3000"
      # Port pour debugging Node.js
      - "9230:9230"
    command: ["npm", "run", "start:debug"]
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health" ]
      interval: 60s
      start_period: 120s

  # ===== POSTGRES - CONFIG DEV =====
  postgres:
    environment:
      - POSTGRES_DB=biblioflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dev_password_123
    ports:
      # Exposer le port pour accès direct depuis l'IDE
      - "5432:5432"
    volumes:
      # Volume de dev (peut être supprimé facilement)
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro

  # ===== MONGODB - CONFIG DEV =====
  mongodb:
    environment:
      - MONGO_INITDB_ROOT_PASSWORD=dev_password_123
    ports:
      # Exposer le port pour MongoDB Compass
      - "27017:27017"
    volumes:
      # Volume de dev
      - mongodb_dev_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d:ro

  # ===== NGINX - CONFIG DEV =====
  nginx:
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Logs accessibles localement
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"

# ===== VOLUMES DE DÉVELOPPEMENT =====
volumes:
  frontend_dev_node_modules:
    driver: local
    name: biblioflow_frontend_dev_node_modules
  backend_dev_node_modules:
    driver: local
    name: biblioflow_backend_dev_node_modules
  postgres_dev_data:
    driver: local
    name: biblioflow_postgres_dev_data
  mongodb_dev_data:
    driver: local
    name: biblioflow_mongodb_dev_data