# ===== CONFIGURATION NGINX REVERSE PROXY POUR BIBLIOFLOW =====

# Configuration des événements
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configuration HTTP principale
http {
    # Paramètres de base
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Optimisations générales
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Configuration des logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Compression GZIP
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Configuration des upstreams
    upstream frontend {
        least_conn;
        server frontend:4200 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream backend {
        least_conn;
        server backend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Configuration du serveur principal
    server {
        listen 80;
        server_name localhost biblioflow.local;

        # Headers de sécurité
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # ===== ROUTES FRONTEND ANGULAR =====
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;

            # Timeouts pour WebSocket (hot-reload)
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Cache pour les assets statiques
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend;
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Pragma public;
                add_header Vary Accept-Encoding;
            }
        }

        # ===== API BACKEND NESTJS =====
        location /api/ {
            # Supprimer /api du chemin avant de transférer
            rewrite ^/api/(.*)$ /$1 break;

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;

            # Headers CORS
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, Keep-Alive, X-Requested-With, If-Modified-Since" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Max-Age 86400 always;

            # Préflight CORS
            if ($request_method = OPTIONS) {
                return 204;
            }

            # Timeouts pour API
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # ===== HEALTH CHECK =====
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"biblioflow-nginx","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # ===== MÉTRIQUES NGINX =====
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }

        # ===== SÉCURITÉ =====
        # Bloquer l'accès aux fichiers sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Favicon
        location = /favicon.ico {
            proxy_pass http://frontend;
            log_not_found off;
            access_log off;
        }

        # Robots.txt
        location = /robots.txt {
            proxy_pass http://frontend;
            log_not_found off;
            access_log off;
        }

        # ===== ERROR PAGES =====
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # ===== CONFIGURATION HTTPS (pour production) =====
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost biblioflow.local;
    #
    #     ssl_certificate /path/to/certificate.crt;
    #     ssl_certificate_key /path/to/private.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # Reste de la configuration identique au serveur HTTP
    # }
}