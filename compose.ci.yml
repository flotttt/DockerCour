services:
  frontend:
    build:
      context: ./biblioflow-frontend
      dockerfile: Dockerfile
      target: production
    container_name: biblioflow-frontend
    environment:
      - NODE_ENV=production
      - API_URL=http://backend:3000
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 60s
      timeout: 5s
      retries: 2
      start_period: 15s
    networks:
      - biblioflow_frontend
    ports:
      - "4200:80"
    restart: "no"
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./biblioflow-backend
      dockerfile: Dockerfile
      target: production
    container_name: biblioflow-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:biblioflow_postgres_secure_password_2024@postgres:5432/biblioflow
      - MONGODB_URL=mongodb://mongodb:27017/biblioflow
      - PORT=3000
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/books"]
      interval: 60s
      timeout: 5s
      retries: 2
      start_period: 30s
    networks:
      - biblioflow_backend
      - biblioflow_frontend
    ports:
      - "3000:3000"
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: biblioflow-postgres
    environment:
      - POSTGRES_DB=biblioflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=biblioflow_postgres_secure_password_2024
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --locale=C
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d biblioflow"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - biblioflow_backend
    ports:
      - "5432:5432"
    restart: "no"
    volumes:
      - postgres_data_ci:/var/lib/postgresql/data

  mongodb:
    image: mongo:7-jammy
    container_name: biblioflow-mongodb
    environment:
      - MONGO_INITDB_DATABASE=biblioflow_logs
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=biblioflow_mongodb_root_password_2024
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - biblioflow_backend
    ports:
      - "27017:27017"
    restart: "no"
    volumes:
      - mongodb_data_ci:/data/db

  nginx:
    image: nginx:alpine
    container_name: biblioflow-nginx
    networks:
      - biblioflow_frontend
      - biblioflow_backend
    ports:
      - "80:80"
    restart: "no"
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy

networks:
  biblioflow_frontend:
    driver: bridge
  biblioflow_backend:
    driver: bridge

volumes:
  postgres_data_ci:
  mongodb_data_ci: